[ldapenforcer]
# LDAP Connection Settings
# Standard LDAP connection
uri = "ldap://example.com:389"
# For secure LDAPS connection, use:
# uri = "ldaps://example.com:636"

bind_dn = "cn=admin,dc=example,dc=com"
password = "admin_password"
# OR
# password_file = "/path/to/password/file.txt"  # Absolute path
# password_file = "passwords/ldap.txt"  # Relative to config file
# OR
# password_command = "pass show ldap/admin"  # Execute command to get password
# password_command = "security find-generic-password -s 'LDAP Admin' -w"  # macOS keychain example
# password_command = "secret-tool lookup service ldap user admin"  # GNOME keyring example
# password_command = "kubectl get secret -n directory dirsrv-env -o go-template='{{ index .data \"DS_DM_PASSWORD\" | base64decode}}'"
#
# For commands that need shell features (|, <, >, $, ``, etc.), set password_command_via_shell = true
# Example with kubectl and go-templates (requires password_command_via_shell = true):
# password_command = "somehow-get-password | grep 'password:' | awk '{print $2}'"
# password_command_via_shell = true


# Path to CA certificate file for LDAPS connections (only needed for LDAPS)
# ca_cert_file = "/path/to/ca.crt"  # Absolute path
# ca_cert_file = "certs/ca.crt"  # Relative to config file

# Log level - controls the verbosity of the application
# Valid values: ERROR, WARN, INFO, DEBUG, LDAP, TRACE (case-insensitive)
log_level = "INFO"

# Directory Structure
people_base_dn = "ou=people,dc=example,dc=com"
svcacct_base_dn = "ou=svcaccts,dc=example,dc=com"
group_base_dn = "ou=groups,dc=example,dc=com"
managed_ou = "enforced"

# Person definitions
[ldapenforcer.person.micahrl]
cn = "Micah R Ledbetter"
givenName = "Micah"
sn = "Ledbetter"
mail = "me@micahrl.com"
posix = [10069, 10101]  # UID number, GID number

[ldapenforcer.person.jdoe]
cn = "John Doe"
mail = "jdoe@example.com"
posix = [10070, 10102]

# Service account definitions
[ldapenforcer.svcacct.authenticator]
cn = "Authenticator"
description = "A service account for authenticating users"

[ldapenforcer.svcacct.backups]
cn = "Backup Service"
description = "A service account for performing backups"
posix = [10200, 10200]  # UID number, GID number (both required for POSIX)

# Group definitions
[ldapenforcer.group.admins]
description = "Administrative users"
posixGidNumber = 10100
people = ["micahrl"]
svcaccts = ["authenticator"]
groups = []

[ldapenforcer.group.users]
description = "Regular users"
posixGidNumber = 10101
people = ["jdoe"]
svcaccts = []
groups = []

[ldapenforcer.group.all]
description = "All users and services"
people = []
svcaccts = []
groups = ["admins", "users", "cycle1"]  # Nested groups - members are included

[ldapenforcer.group.cycle1]
description = "Cyclic group 1"
people = []
svcaccts = []
groups = ["cycle2"]

[ldapenforcer.group.cycle2]
description = "Cyclic group 2"
people = []
svcaccts = []
groups = ["cycle1"]